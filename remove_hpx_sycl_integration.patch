diff --git a/src/hpx/kokkos/deep_copy.hpp b/src/hpx/kokkos/deep_copy.hpp
index 11a5412..6ddaeab 100644
--- a/src/hpx/kokkos/deep_copy.hpp
+++ b/src/hpx/kokkos/deep_copy.hpp
@@ -37,7 +37,12 @@ hpx::shared_future<void> deep_copy_async(Kokkos::Experimental::SYCL &&instance,
       typename std::decay<SourceSpace>::type::data_type>::value);
   auto& q = *instance.impl_internal_space_instance()->m_queue;
   auto event = q.memcpy(t.data(), s.data(), t.size() * sizeof(typename std::decay<TargetSpace>::type::data_type));
-  return hpx::sycl::experimental::detail::get_future(event);
+  q.ext_oneapi_submit_barrier(std::vector<decltype(event)>{event});
+  q.wait_and_throw();
+  instance.fence();
+  return hpx::make_ready_future();
+  /* auto fut = hpx::sycl::experimental::detail::get_future(event); */
+  /* fut.wait(); */
 }
 #endif
 } // namespace kokkos
diff --git a/src/hpx/kokkos/future.hpp b/src/hpx/kokkos/future.hpp
index b0d83d8..1f2b0be 100644
--- a/src/hpx/kokkos/future.hpp
+++ b/src/hpx/kokkos/future.hpp
@@ -84,8 +84,10 @@ template <> struct get_future<Kokkos::Experimental::HIP> {
 template <> struct get_future<Kokkos::Experimental::SYCL> {
   template <typename E> static hpx::shared_future<void> call(E &&inst) {
     HPX_KOKKOS_DETAIL_LOG("getting future from SYCL queue %p", &(inst.sycl_queue()));
-    auto fut = hpx::sycl::experimental::detail::get_future(inst.sycl_queue());
-    return fut ;
+    inst.fence();
+    return hpx::make_ready_future();
+    /* auto fut = hpx::sycl::experimental::detail::get_future(inst.sycl_queue()); */
+    /* return fut ; */
   }
 };
 #endif
